<?php

/*
 * Implements hook_schema().
 */
function password_policy_schema() {
  $schema = array(
    'password_policy_reset' => array(
      'description' => 'The table that holds password reset policies.',
      'fields' => array(
        'cid' => array(
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE
        ),
        'number_of_days' => array(
          'type' => 'int',
          'not null' => TRUE,
          'default' => 1
        ),
      ),
      'primary key' => array('cid'),
    ),
    'password_policy_user_reset' => array(
      'description' => 'The table that holds the timestamp of each users last password reset and if users password has expired.',
      'fields' => array(
        'uid' => array('type' => 'int', 'not null' => TRUE),
        'timestamp' => array(
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0
        ),
        'expired' => array('type' => 'int', 'not null' => TRUE, 'default' => 0),
      ),
      'primary key' => array('uid'),
    ),
    'password_policies' => array(
      'description' => 'The table that holds password policies.',
      'fields' => array(
        'pid' => array(
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE
        ),
        'policy_title' => array(
          'type' => 'varchar',
          'length' => '255',
          'not null' => TRUE,
          'default' => 1
        ),
      ),
      'primary key' => array('pid'),
    ),
    'password_policy_constraints' => array(
      'description' => 'The table that joins password policies and constraints.',
      'fields' => array(
        'pcid' => array(
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE
        ),
        'pid' => array(
          'type' => 'int',
          'not null' => TRUE,
        ),
        'cid' => array(
          'type' => 'int',
          'not null' => TRUE,
        ),
        'plugin_type' => array(
          'type' => 'varchar',
          'length' => '255',
          'not null' => TRUE,
        ),
      ),
      'primary key' => array('pcid'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_install().
 */
function password_policy_install() {
  //get users
  $users = db_select('users', 'u')
    ->fields('u', array('uid'));
  $users->addExpression("'" . time() . "'", 'timestamp');
  $users->addExpression('0', 'expired');
  //add them
  db_insert('password_policy_user_reset')
    ->fields(array('uid', 'timestamp', 'expired'))
    ->from($users)
    ->execute();
}